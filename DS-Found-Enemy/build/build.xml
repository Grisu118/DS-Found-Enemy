<?xml version="1.0"?>

<project name="DS Found Enemy" default="compile" basedir=".." xmlns:jacoco="antlib:org.jacoco.ant">
	<property file="build/build.properties" />

	<!-- The application's classpath -->
	<path id="application.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.zip" />
		</fileset>
	</path>

	<!-- The build tools classpath -->
	<path id="build.classpath">
		<fileset dir="${build.lib.dir}">
			<include name="*.zip" />
		</fileset>
		<pathelement location="${bin.classes.dir}" />
		<path refid="application.classpath" />
	</path>


	<!-- Define the additional ant tasks     -->
	<taskdef resource="checkstyletask.properties" classpathref="build.classpath" />
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="${build.lib.dir}/jacocoant.zip" />
	</taskdef>

	<target name="clean">
		<delete dir="${bin.classes.dir}" />
		<delete dir="${bin.jar.dir}" />
		<delete dir="${log.report.dir}" />
		<delete dir="${doc.api.dir}" />
		<delete dir="${log.report.checkstyle.dir}" />
	</target>



	<target name="prepare" depends="clean">
		<mkdir dir="${bin.classes.dir}" />
		<mkdir dir="${bin.jar.dir}" />
		<mkdir dir="${log.report.dir}" />
		<mkdir dir="${doc.api.dir}" />
		<mkdir dir="${log.report.checkstyle.dir}" />
		<mkdir dir="${log.report.test.dir}" />
		<mkdir dir="${log.jacoco.dir}" />
	</target>

	<target name="compile" depends="prepare" description="Compile the sources">
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${bin.classes.dir}" classpathref="application.classpath" deprecation="on" debug="on" encoding="UTF-16" />
		<!--<copy todir="${bin.classes.dir}">
			<fileset dir="${res.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.png" />
			</fileset>
		</copy>-->
	</target>

	<target name="run" depends="jar" description="Run distributed application from jar file">
		<java jar="${bin.jar.dir}/${name}-${version}.jar" fork="true" />
	</target>

	<target name="jar" depends="junit" description="Create jar distribution">
		<jar jarfile="${bin.jar.dir}/${name}-${version}.jar" basedir="${bin.classes.dir}" excludes="**/*Test*.class">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value=".
                    ../../lib/dbunit-2.2.jar
                    ../../lib/hsqldb.jar" />
			</manifest>
		</jar>
	</target>

	<target name="compile_test" depends="compile" description="Compile the sources">
		<javac includeantruntime="false" srcdir="${test.dir}" destdir="${bin.classes.dir}" classpathref="build.classpath" deprecation="on" debug="on" encoding="UTF-16"/>
		<!--	<copy todir="${bin.classes.dir}">
			<fileset dir="${res.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.png" />
			</fileset>
		</copy>-->
		<copy todir="${bin.classes.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*.xml" />
				<include name="**/*.properties" />
				<include name="**/*.png" />
			</fileset>
		</copy>
	</target>

	<target name="junit" depends="compile_test">
		<jacoco:coverage destfile="${log.jacoco.dir}/jacoco.exec">
			<junit printsummary="yes" haltonfailure="yes" haltonerror="yes" fork="true">
				<classpath>
					<path refid="build.classpath" />
					<pathelement location="${bin.classes.dir}" />
				</classpath>
				<formatter type="plain" />
				<formatter type="xml" />
				<batchtest fork="yes" todir="${log.report.test.dir}">
					<fileset dir="${test.dir}" includes="**/*Test*" />
				</batchtest>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="checkstyle" depends="compile">

		<taskdef resource="checkstyletask.properties" classpathref="build.classpath" />
		<checkstyle classpathref="build.classpath" config="${build.dir}/swc_checks.xml" failureproperty="checkstyle.failure">
			<property key="config_loc" value="./" />
			<formatter type="plain" />
			<formatter type="plain" tofile="${log.report.checkstyle.dir}/checkstyle_report.txt" />
			<formatter type="xml" tofile="${log.report.checkstyle.dir}/checkstyle_report.xml" />
			<fileset dir="${src.dir}" />
		</checkstyle>
	</target>


	<target name="Javadoc" depends="prepare">
		<javadoc sourcepath="${src.dir}" destdir="${doc.api.dir}" classpathref="application.classpath" encoding="UTF-16"/>
	</target>

	<target name="exe_server" depends="jar">
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir.server}/launch4j.jar
			    :${launch4j.dir.server}/lib/xstream.jar" />
		<launch4j configFile="${l4j.dir}/DS_Found_Enemy.xml" />
	</target>

	<target name="all" depends="Javadoc, jar, exe_server">
	</target>

</project>